{"version":3,"sources":["components/Menu/index.js","components/Message/index.js","components/MessageList/index.js","App.js","registerServiceWorker.js","index.js"],"names":["withTheme","props","position","color","aria-label","variant","Message","state","left","dx","this","setState","dismissMessage","msg","id","author","content","updated","photoUrl","onDragEnd","handleDragEnd","onDrag","obj","deltas","handleDrag","style","translateX","opacity","transform","Card","paddingBottom","avatar","src","name","title","subheader","moment","fromNow","padding","component","React","Component","getMessages","pageToken","a","fetch","response","json","MessageList","isLoading","count","messages","dismissed","getMoreMessages","window","addEventListener","infiniteScroll","innerHeight","scrollY","document","body","offsetHeight","then","res","concat","Fragment","filter","includes","map","key","item","xs","fullWidth","disabled","theme","createMuiTheme","palette","primary","deepPurple","App","paddingTop","overflowX","container","spacing","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","getElementById","URL","process","origin","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4b2cad0a.chunk.js","sourcesContent":["import React from 'react';\nimport { withTheme } from 'material-ui/styles';\nimport AppBar from 'material-ui/AppBar';\nimport Toolbar from 'material-ui/Toolbar';\nimport Typography from 'material-ui/Typography';\nimport IconButton from 'material-ui/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nfunction Menu(props) {\n  return (\n    <div >\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton color=\"inherit\" aria-label=\"Menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"title\" color=\"inherit\">\n            Messages\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default withTheme()(Menu);","import React from 'react';\nimport { withTheme } from 'material-ui/styles';\nimport Card, { CardHeader, CardContent } from 'material-ui/Card';\nimport Avatar from 'material-ui/Avatar';\nimport Typography from 'material-ui/Typography';\nimport { Draggable } from 'react-touch-draggable';\nimport moment from 'moment-es6';\n\nconst threshold = 100;\n\nclass Message extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { left: 0 };\n  }\n\n  handleDrag({dx}) {\n    dx = dx > 0 ? dx : 0; // Only allow dragging to the right\n    this.setState({ left: dx });\n  }\n\n  handleDragEnd() {\n    const { left } = this.state;\n    const { dismissMessage, msg } = this.props;\n    if (left < threshold) {\n      this.setState({ left: 0 });\n    } else {\n      dismissMessage(msg.id);\n    }\n  }\n\n  render() {\n    const { left } = this.state;\n    const { author, content, updated } = this.props.msg;\n    const photoUrl = '//message-list.appspot.com'+author.photoUrl;\n    return (\n      <Draggable\n        onDragEnd={() => this.handleDragEnd()}\n        onDrag={(obj, deltas)=> this.handleDrag(deltas)}\n        position={{ left: left }}\n        style={{ translateX: 0 }}>\n        {({ dx }) => {\n          const isOverThreshold = dx > threshold;\n          const opacity = isOverThreshold ? 0.5 : 1;\n          return (\n            <div style={{ transform: `translateX(${left}px)`, opacity }}>\n              <Card>\n                <CardHeader\n                  style={{ paddingBottom: 0 }}\n                  avatar={<Avatar src={photoUrl} aria-label={author.name}></Avatar>}\n                  title={author.name}\n                  subheader={moment(updated).fromNow()}\n                />\n                <CardContent style={{ padding: 16 }}>\n                  <Typography component=\"p\">\n                    {content}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </div>\n          );\n        }}\n      </Draggable>\n    );\n  }\n}\n\nexport default withTheme()(Message);\n","import React from 'react';\nimport { withTheme } from 'material-ui/styles';\nimport Grid from 'material-ui/Grid';\nimport Button from 'material-ui/Button';\nimport Message from '../Message';\n\nconst getMessages = async function(pageToken) {\n  const response = await fetch(\n    `//message-list.appspot.com/messages?limit=100${\n      pageToken ? '&pageToken=' + pageToken : ''\n    }`\n  );\n  return await response.json();\n};\n\nclass MessageList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      count: 0,\n      pageToken: null,\n      messages: [],\n      dismissed: []\n    };\n  }\n\n  componentDidMount() {\n    this.getMoreMessages();\n    window.addEventListener('scroll', ()=>this.infiniteScroll());\n  }\n\n  infiniteScroll() {\n    if (this.state.isLoading) return;\n    const { innerHeight, scrollY } = window;\n    const { offsetHeight } = document.body;\n    const pxFromBottom = 10000;\n    const lowestVisiblePoint = innerHeight + scrollY;\n    const triggerPoint = offsetHeight - pxFromBottom;\n    const isNearBottom = lowestVisiblePoint > triggerPoint;\n    if (isNearBottom) {\n      this.getMoreMessages();\n    }\n  }\n\n  dismissMessage(id) {\n    this.setState({ dismissed: [...this.state.dismissed, id] });\n  }\n\n  getMoreMessages() {\n    const { messages, pageToken } = this.state;\n    this.setState({ isLoading: true });\n    getMessages(pageToken).then(res => {\n      this.setState({\n        isLoading: false,\n        pageToken: res.pageToken,\n        messages: messages.concat(res.messages)\n      });\n    });\n  }\n\n  render() {\n    const { dismissed, messages, isLoading } = this.state;\n    return (\n      <React.Fragment>\n        {messages\n          .filter(msg => {\n            return !dismissed.includes(msg.id);\n          })\n          .map(msg => {\n            return (\n              <Grid key={msg.id} item xs={12}>\n                <Message\n                  msg={msg}\n                  dismissMessage={id => this.dismissMessage(id)}\n                />\n              </Grid>\n            );\n          })}\n        {isLoading ? (\n          <Button\n            fullWidth={true}\n            disabled={true}\n          >Loading messages...</Button>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withTheme()(MessageList);\n","import React from 'react';\nimport CssBaseline from 'material-ui/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from 'material-ui/styles';\nimport Grid from 'material-ui/Grid';\nimport Menu from './components/Menu';\nimport MessageList from './components/MessageList';\n\nimport deepPurple from 'material-ui/colors/deepPurple';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: deepPurple,\n  },\n});\n\nclass App extends React.Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <Menu />\n        <div style={{ padding: 16, paddingTop: 72, overflowX: 'hidden' }}>\n          <Grid container spacing={8}>\n            <MessageList />\n          </Grid>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}